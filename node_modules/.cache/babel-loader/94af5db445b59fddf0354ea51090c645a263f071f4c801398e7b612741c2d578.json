{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVAM GUPTA\\\\Desktop\\\\Amazon clone\\\\amazon-clone\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { callAPI } from \"../utils/CallApi\";\nimport ProductDetails from \"./ProductDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [products, setProducts] = useState(null);\n  const getSearchresults = () => {\n    const searchTerm = searchParams.get(\"searchTerm\");\n    const category = searchParams.get(\"category\");\n    callAPI(`data/search.json`).then(searchResults => {\n      const categoryResults = searchResults[category];\n      if (searchTerm) {\n        const results = categoryResults.filter(product => product.title.toLowerCase().includes(searchTerm.toLowerCase()));\n        setProducts(results);\n      } else {\n        setProducts(categoryResults);\n      }\n    });\n  };\n  useEffect(() => {\n    getSearchresults();\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-w-[1200px] max-w-[1300px] m-auto\",\n    children: products && products.map((product, key) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/product/${product.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-[250px] grid grid-cols-12 rounded mt- mb-1 \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2 p-4 bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.image_small,\n              className: \"m-auto\",\n              alt: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-10 bg0gray-50 border-gray-100 hover:bg-gray-100\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-black p-2\",\n                children: /*#__PURE__*/_jsxDEV(ProductDetails, {\n                  product: product,\n                  ratings: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"pNAtyELn55qhvqQwCKcDmDVO1DU=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["useSearchParams","Link","useEffect","useState","callAPI","ProductDetails","jsxDEV","_jsxDEV","SearchResults","_s","searchParams","products","setProducts","getSearchresults","searchTerm","get","category","then","searchResults","categoryResults","results","filter","product","title","toLowerCase","includes","className","children","map","key","to","id","src","image_small","alt","fileName","_jsxFileName","lineNumber","columnNumber","ratings","_c","$RefreshReg$"],"sources":["C:/Users/SHIVAM GUPTA/Desktop/Amazon clone/amazon-clone/src/components/SearchResults.js"],"sourcesContent":["import { useSearchParams, Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { callAPI } from \"../utils/CallApi\";\r\nimport ProductDetails from \"./ProductDetails\";\r\n\r\nfunction SearchResults() {\r\n  const [searchParams] = useSearchParams();\r\n  const [products, setProducts] = useState(null);\r\n\r\n  const getSearchresults = () => {\r\n    const searchTerm = searchParams.get(\"searchTerm\");\r\n    const category = searchParams.get(\"category\");\r\n\r\n    callAPI(`data/search.json`).then((searchResults) => {\r\n      const categoryResults = searchResults[category];\r\n\r\n      if (searchTerm) {\r\n        const results = categoryResults.filter((product) =>\r\n          product.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setProducts(results);\r\n      } else {\r\n        setProducts(categoryResults);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSearchresults();\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className=\"min-w-[1200px] max-w-[1300px] m-auto\">\r\n      {products &&\r\n        products.map((product, key) => {\r\n          return (\r\n            <Link key={key} to={`/product/${product.id}`}>\r\n              <div className=\"h-[250px] grid grid-cols-12 rounded mt- mb-1 \">\r\n                <div className=\"col-span-2 p-4 bg-gray-200\">\r\n                  <img src={product.image_small} className=\"m-auto\" alt=\"#\" />\r\n                  <div className=\"col-span-10 bg0gray-50 border-gray-100 hover:bg-gray-100\">\r\n                    <div className=\"font-medium text-black p-2\">\r\n                      <ProductDetails product={product} ratings={true} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;AAAA,SAASA,eAAe,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,CAAC,GAAGV,eAAe,CAAC,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,UAAU,GAAGJ,YAAY,CAACK,GAAG,CAAC,YAAY,CAAC;IACjD,MAAMC,QAAQ,GAAGN,YAAY,CAACK,GAAG,CAAC,UAAU,CAAC;IAE7CX,OAAO,CAAE,kBAAiB,CAAC,CAACa,IAAI,CAAEC,aAAa,IAAK;MAClD,MAAMC,eAAe,GAAGD,aAAa,CAACF,QAAQ,CAAC;MAE/C,IAAIF,UAAU,EAAE;QACd,MAAMM,OAAO,GAAGD,eAAe,CAACE,MAAM,CAAEC,OAAO,IAC7CA,OAAO,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CAC/D,CAAC;QACDZ,WAAW,CAACQ,OAAO,CAAC;MACtB,CAAC,MAAM;QACLR,WAAW,CAACO,eAAe,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,oBACEH,OAAA;IAAKmB,SAAS,EAAC,sCAAsC;IAAAC,QAAA,EAClDhB,QAAQ,IACPA,QAAQ,CAACiB,GAAG,CAAC,CAACN,OAAO,EAAEO,GAAG,KAAK;MAC7B,oBACEtB,OAAA,CAACN,IAAI;QAAW6B,EAAE,EAAG,YAAWR,OAAO,CAACS,EAAG,EAAE;QAAAJ,QAAA,eAC3CpB,OAAA;UAAKmB,SAAS,EAAC,+CAA+C;UAAAC,QAAA,eAC5DpB,OAAA;YAAKmB,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACzCpB,OAAA;cAAKyB,GAAG,EAAEV,OAAO,CAACW,WAAY;cAACP,SAAS,EAAC,QAAQ;cAACQ,GAAG,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5D/B,OAAA;cAAKmB,SAAS,EAAC,0DAA0D;cAAAC,QAAA,eACvEpB,OAAA;gBAAKmB,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,eACzCpB,OAAA,CAACF,cAAc;kBAACiB,OAAO,EAAEA,OAAQ;kBAACiB,OAAO,EAAE;gBAAK;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAVGT,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC7B,EAAA,CA/CQD,aAAa;EAAA,QACGR,eAAe;AAAA;AAAAwC,EAAA,GAD/BhC,aAAa;AAiDtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}