{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  productsNumber: 0\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      // check if in product array\n      const addProductExists = state.products.find(product => product.id === action.payload.id);\n      if (addProductExists) {\n        addProductExists.quantity += parseInt(action.payload.quantity);\n      } else {\n        state.products.push({\n          ...action.payload,\n          quantity: parseInt(action.payload.quantity)\n        });\n      }\n      state.productsNumber = state.productsNumber + parseInt(action.payload.quantity);\n    },\n    removeFromCart: (state, action) => {\n      //find the product removing the array\n      //remove the quantity from product\n      //find index of the product removing\n      //remove from array\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","productsNumber","cartSlice","name","reducers","addToCart","state","action","addProductExists","find","product","id","payload","quantity","parseInt","push","removeFromCart","actions","reducer"],"sources":["C:/Users/SHIVAM GUPTA/Desktop/Amazon clone/amazon-clone/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  productsNumber: 0,\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      // check if in product array\r\n      const addProductExists = state.products.find(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n\r\n      if (addProductExists) {\r\n        addProductExists.quantity += parseInt(action.payload.quantity);\r\n      } else {\r\n        state.products.push({\r\n          ...action.payload,\r\n          quantity: parseInt(action.payload.quantity),\r\n        });\r\n      }\r\n      state.productsNumber =\r\n        state.productsNumber + parseInt(action.payload.quantity);\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      //find the product removing the array\r\n      //remove the quantity from product\r\n      //find index of the product removing\r\n      //remove from array\r\n    },\r\n  },\r\n});\r\nexport const { addToCart, removeFromCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B;MACA,MAAMC,gBAAgB,GAAGF,KAAK,CAACN,QAAQ,CAACS,IAAI,CACzCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAC7C,CAAC;MAED,IAAIH,gBAAgB,EAAE;QACpBA,gBAAgB,CAACK,QAAQ,IAAIC,QAAQ,CAACP,MAAM,CAACK,OAAO,CAACC,QAAQ,CAAC;MAChE,CAAC,MAAM;QACLP,KAAK,CAACN,QAAQ,CAACe,IAAI,CAAC;UAClB,GAAGR,MAAM,CAACK,OAAO;UACjBC,QAAQ,EAAEC,QAAQ,CAACP,MAAM,CAACK,OAAO,CAACC,QAAQ;QAC5C,CAAC,CAAC;MACJ;MACAP,KAAK,CAACL,cAAc,GAClBK,KAAK,CAACL,cAAc,GAAGa,QAAQ,CAACP,MAAM,CAACK,OAAO,CAACC,QAAQ,CAAC;IAC5D,CAAC;IACDG,cAAc,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACjC;MACA;MACA;MACA;IAAA;EAEJ;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEF,SAAS;EAAEW;AAAe,CAAC,GAAGd,SAAS,CAACe,OAAO;AAC9D,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}